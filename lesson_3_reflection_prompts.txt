When would you want to use a remote repository rather than keeping all your work local?
  Ans:I would want to use a remote repository for the following reasons:
  To backup my work in case something happens and I lose all my local changes.
  To be able to share my files or code with other contributors to a project we are collaborating on together.
  To share my files or codes with other people even if they can only access and see but cannot modify them.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	Ans: I would want to always pull changes manually to give myself a chance to make sure that changes introduced by other people collaborating on a project with me or me for that matter are compatible with the changes I had been working on locally and that no bug was introduced. Plus pulling the code manually allows me to be in control of when to pull the changes, which is beneficial as I would not want some changes to appear while I'm working on a code.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	Ans: With branches, I'm able to add new changes in the same repository without affecting previous versions.
	Forks and clones are the same in the sense that they both copy the entire repository, but forks only operates on GitHub. Meaning you can fork a GitHub repository to another GitHub location. But clone can be used to copy any Git repository to any location you have access to.

	 I would use branching when I want to add new changes to a repository, but also want to keep that repository unchanged and unaffected by the new changes I would want to make in the new branch and in case I'm collaborating with other people, my changes would not affect their work as of yet. I would clone a gitHub repository when I want to work on that repository locally, and I would fork a repository that I would want to contribute to or make changes to but do not have permissions to modify.

What is the benefit of having a copy of the last known state of the remote stored locally?
	Ans: If for some reasons, I have to work offline, I can make sure before going offline that I have the latest copy of the known state of the remote on my machine even if I do not merge my changes with it(by using the fetch command), and merge the two copies once I'm ready I can merge my changes locally.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	Ans: I have used dropbox before to collaborate with other team members. Thus if I were to pick outside of version controls that are meant to make sharing code easier, I would suggest to create a folder on dropbox where we could all make changes. The challenges would emerged when we all have to modify the same code, or when trying to merge those changes and avoiding conflicts, I believe that it would be very time consuming.